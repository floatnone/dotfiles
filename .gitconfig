[alias]
  # https://git.wiki.kernel.org/articles/a/l/i/Aliases.html

  # `git remote prune origin`: remove remote-tracking branches that were deleted from the remote repo
  # `git gc`: cleanup unnecessary files and optimize the local repository
  # `git clean -df`: remove untracked files and directories from the working tree
  # `git stash clear`: remove all stashed states
  trim = !git remote prune origin && git gc
  cleanup = !git clean -df && git stash clear

  # Add untracked, remove deleted, and show status
  adda = !git add -A && git status

  # Show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v

  # Fetch a repository ($1) and checkout its ref ($2) HEAD
  # Use: `git browse https://github.com/necolas/dotfiles <commit-ish>`
  browse = !bash -c 'git fetch $1 ${2:-HEAD} && git checkout FETCH_HEAD' -

  # Diff what is staged for the next commit
  diffc = diff --cached
  # Diff overview
  diffst = diff --stat

  # Switch to a branch, creating it if necessary
  go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"

  # Custom pretty log
  logp = log --pretty=nice --date-order

  # Diffstat log
  logst = log --stat
  # Short format diffstat log
  logsf = log --stat --format=oneline --abbrev-commit

  # Fetch and checkout a GitHub Pull Request from a remote (defaults to `origin`)
  # Use: `git gh-pr 123` or `git gh-pr 123 upstream`
  gh-pr = !bash -c 'git fetch -fu ${2:-origin} refs/pull/$1/head:gh-pr/$1 && git checkout gh-pr/$1' -

  # Find out who is currently active on the repository
  # Displays committers in descending order of number of commits
  who = shortlog --numbered --summary --email --no-merges --since="3 months"

[color]
  # color opts: normal, black, red, green, yellow, blue, magenta, cyan, or white
  ui = auto
  interactive = auto

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[core]
  # Use custom `.gitignore` and `.gitattributes`
  excludesfile = ~/.gitignore
  attributesfile = ~/.gitattributes

[credential]
  helper = osxkeychain

[help]
	# Automatically correct and execute mistyped commands
	autocorrect = 1

[merge]
	# Include summaries of merged commits in newly created merge commit messages
	log = true

[push]
  default = current
